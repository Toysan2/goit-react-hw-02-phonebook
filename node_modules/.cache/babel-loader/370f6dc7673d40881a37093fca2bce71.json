{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ContactForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces.\",\n            required: true,\n            value: name,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            value: number,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default ContactForm;","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","ContactForm","constructor","arguments","state","name","number","handleInputChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","render","class","children","type","pattern","title","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","func","isRequired"],"sources":["E:/GoIT/Zad dom/goit-react-hw-02-phonebook/src/components/ContactForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div class=\"ContactForm\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces.\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC;IAAA,KAEDC,iBAAiB,GAAGC,KAAK,IAAI;MAC3B,MAAM;QAAEH,IAAI;QAAEI;MAAM,CAAC,GAAGD,KAAK,CAACE,aAAa;MAC3C,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACN,IAAI,GAAGI;MAAM,CAAC,CAAC;IAClC,CAAC;IAAA,KAEDG,YAAY,GAAGJ,KAAK,IAAI;MACtBA,KAAK,CAACK,cAAc,CAAC,CAAC;MACtB,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACX,KAAK,CAAC;MAC/B,IAAI,CAACO,QAAQ,CAAC;QAAEN,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC;IACzC,CAAC;EAAA;EAEDU,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEX,IAAI;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACF,KAAK;IAEnC,oBACEJ,OAAA;MAAKiB,KAAK,EAAC,aAAa;MAAAC,QAAA,eACtBlB,OAAA;QAAMe,QAAQ,EAAE,IAAI,CAACH,YAAa;QAAAM,QAAA,gBAChClB,OAAA;UAAAkB,QAAA,GAAO,MAEL,eAAAlB,OAAA;YACEmB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,MAAM;YACXe,OAAO,EAAC,wHAA4D;YACpEC,KAAK,EAAC,6DAA6D;YACnEC,QAAQ;YACRb,KAAK,EAAEJ,IAAK;YACZkB,QAAQ,EAAE,IAAI,CAAChB;UAAkB;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER3B,OAAA;UAAAkB,QAAA,GAAO,QAEL,eAAAlB,OAAA;YACEmB,IAAI,EAAC,KAAK;YACVd,IAAI,EAAC,QAAQ;YACbe,OAAO,EAAC,wFAA4E;YACpFC,KAAK,EAAC,8FAA8F;YACpGC,QAAQ;YACRb,KAAK,EAAEH,MAAO;YACdiB,QAAQ,EAAE,IAAI,CAAChB;UAAkB;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR3B,OAAA;UAAQmB,IAAI,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;AACF;AAEA1B,WAAW,CAAC2B,SAAS,GAAG;EACtBb,QAAQ,EAAEjB,SAAS,CAAC+B,IAAI,CAACC;AAC3B,CAAC;AAED,eAAe7B,WAAW"},"metadata":{},"sourceType":"module"}